{"version":3,"sources":["view/game/TableBox.jsx","constant/game.js","utils/computeWinner.js","actions/gameActions.js","constant/actionType.js","view/game/Box.jsx","view/game/RowBox.jsx","view/game/WrapBox.jsx","view/game/Game.jsx","view/startGame/StartGame.jsx","view/gameInfo/GameInfo.jsx","view/gameSetting/GameSetting.jsx","view/historyData/HistoryData.jsx","view/frame/Frame.jsx","serviceWorker.js","utils/storage.js","middleware/cacheData.js","reducers/status.js","reducers/gameData.js","reducers/historyData.js","reducers/index.js","reducers/setting.js","store/index.js","index.js"],"names":["TableBox","width","this","props","box","size","className","renderLine","style","line","w","h","wNum","getArr","map","num","key","height","hNum","arr","i","push","Component","defaultProps","END","DEFAULT_SETTING","rows","columns","continuousStep","defaultPlayer","getXWin","data","player","x","y","len","getYWin","getXYWin","x1","y1","getYXWin","resetStatus","status","dispatch","getState","type","dec","gameStatus","nextPlayer","setting","updateData","index","state","newData","gameData","length","winner","position","Math","floor","getWinner","nowStep","step","updateStatus","Box","colors","black","white","value","styles","backgroundColor","onClick","handlePlay","bind","connect","RowBox","startIndex","WrapBox","renderRowBox","elem","slice","Game","lastRecord","StartGame","handleStart","handlePause","danger","pauseOrContinueGame","GameInfo","start","pause","end","GameSetting","first","winPremise","propsData","title","layout","column","Item","label","onChange","handleInput","handleSelect","Option","handleOk","paddingTop","handleReset","e","target","test","setState","settingData","parseInt","updateSetting","showInfo","Modal","info","okText","HistoryData","historyData","reverse","item","startTime","endTime","Frame","Boolean","window","location","hostname","match","getLocal","name","localStorage","getItem","JSON","parse","cacheData","store","next","action","moment","format","obj","undefined","stringify","setItem","setLocal","message","error","initState","GameConst","Array","fill","prevData","nextStep","getHistoryData","games","combineReducers","createLogger","middleware","thunkMiddleware","createStore","applyMiddleware","configStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.7ffaedf6.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class TableBox extends Component {\n  render() {\n    let width = (this.props.box[0] - 1) * this.props.size;\n\n    return (\n      <div className=\"tableBox\">\n        <div className=\"tableRows\">\n          {\n            this.renderLine('rows')\n          }\n        </div>\n        <div className=\"tableColumns\" style={{ width }}>\n          {\n            this.renderLine('columns')\n          }\n        </div>\n      </div>\n    );\n  }\n\n  renderLine(line) {\n    const [w, h] = this.props.box;\n    const size = this.props.size;\n\n    // 渲染棋盘横线\n    if (line === 'rows') {\n      let wNum = w - 1;\n\n      return this.getArr(h - 1).map(num => {\n        return (\n          <div\n            key={num}\n            className=\"rows\"\n            style={{ width: size * wNum, height: size }}></div>\n        );\n      });\n    }\n\n    // 渲染棋盘竖线\n    if (line === 'columns') {\n      let hNum = h - 1;\n\n      return this.getArr(w - 1).map(num => {\n        return (\n          <div\n            key={num}\n            className=\"columns\"\n            style={{ width: size, height: size * hNum }}></div>\n        );\n      });\n    }\n  }\n\n  getArr(num = 0) {\n    let arr = [];\n\n    for (let i = 0; i < num; i++) {\n      arr.push(i + 1);\n    }\n\n    return arr;\n  }\n}\n\nTableBox.defaultProps = {\n  box: [0, 0],\n  size: 0\n};","export const WHITE = 'white';\nexport const BLACK = 'black';\n\nexport const START = 'start';\nexport const PAUSE = 'pause';\nexport const END = 'end';\nexport const HISTORY_KEY = 'historyData';\n\nexport const DEFAULT_SETTING = {\n  rows: 25, //棋盘行数\n  columns: 25, //棋盘列数\n  size: 20, //棋盘格子尺寸\n  continuousStep: 5, //连续相同颜色的棋子赢\n  defaultPlayer: WHITE //默认先手方\n};","export default function getWinner(data = [], index, state) {\n  const { columns } = state.setting;\n  let position = {\n    x: index % columns,\n    y: Math.floor(index / columns)\n  };\n  let player = data[index];\n  let winner = '';\n\n  winner = winner || getXWin(data, player, position, state.setting);\n  winner = winner || getYWin(data, player, position, state.setting);\n  winner = winner || getXYWin(data, player, position, state.setting);\n  winner = winner || getYXWin(data, player, position, state.setting);\n\n  return winner;\n}\n\n// 计算x轴胜负\nfunction getXWin(data, player, { x, y }, { columns, continuousStep }) {\n  let len = 1;\n\n  for (let i = x + 1; i <= columns; i++) {\n    let ind = y * columns + i;\n    if (data[ind] === player) {\n      len++;\n    } else {\n      break;\n    }\n  }\n\n  for (let i = x - 1; i >= 0; i--) {\n    let ind = y * columns + i;\n    if (data[ind] === player) {\n      len++;\n    } else {\n      break;\n    }\n  }\n\n  if (len >= continuousStep) {\n    return player;\n  }\n\n  return '';\n}\n\n// 计算y轴胜负\nfunction getYWin(data, player, { x, y }, { rows, continuousStep }) {\n  let len = 1;\n\n  for (let i = y + 1; i <= rows; i++) {\n    let ind = i * rows + x;\n    if (data[ind] === player) {\n      len++;\n    } else {\n      break;\n    }\n  }\n\n  for (let i = y - 1; i >= 0; i--) {\n    let ind = i * rows + x;\n    if (data[ind] === player) {\n      len++;\n    } else {\n      break;\n    }\n  }\n\n  if (len >= continuousStep) {\n    return player;\n  }\n\n  return '';\n}\n\n// 计算xy斜轴胜负\nfunction getXYWin(data, player, { x, y }, { rows, columns, continuousStep }) {\n  let len = 1;\n\n  for (let i = x + 1; i <= columns; i++) {\n    let x1 = i;\n    let y1 = y - (i - x);\n\n    if (y1 < 0) {\n      break;\n    }\n\n    let ind = y1 * rows + x1;\n    if (data[ind] === player) {\n      len++;\n    } else {\n      break;\n    }\n  }\n\n  for (let i = x - 1; i >= 0; i--) {\n    let x1 = i;\n    let y1 = y + (x - i);\n\n    if (y1 > rows) {\n      break;\n    }\n\n    let ind = y1 * rows + x1;\n    if (data[ind] === player) {\n      len++;\n    } else {\n      break;\n    }\n  }\n\n  if (len >= continuousStep) {\n    return player;\n  }\n\n  return '';\n}\n\n// 计算yx斜轴胜负\nfunction getYXWin(data, player, { x, y }, { rows, columns, continuousStep }) {\n  let len = 1;\n\n  for (let i = x + 1; i <= columns; i++) {\n    let x1 = i;\n    let y1 = y + (i - x);\n\n    if (y1 > rows) {\n      break;\n    }\n\n    let ind = y1 * rows + x1;\n    if (data[ind] === player) {\n      len++;\n    } else {\n      break;\n    }\n  }\n\n  for (let i = x - 1; i >= 0; i--) {\n    let x1 = i;\n    let y1 = y - (x - i);\n\n    if (y1 < 0) {\n      break;\n    }\n\n    let ind = y1 * rows + x1;\n    if (data[ind] === player) {\n      len++;\n    } else {\n      break;\n    }\n  }\n\n  if (len >= continuousStep) {\n    return player;\n  }\n\n  return '';\n}","\nimport * as ActionConst from '../constant/actionType';\nimport { END, WHITE, BLACK } from '../constant/game';\nimport getWinner from '../utils/computeWinner';\n\nexport function resetStatus(status) {\n  return (dispatch, getState) => {\n    const action = {\n      type: ActionConst.reset_status,\n      dec: '重置游戏状态',\n      gameStatus: status,\n      nextPlayer: getState().setting.defaultPlayer\n    };\n\n    dispatch(action);\n    dispatch(resetData());\n  };\n}\n\nexport function resetData() {\n  return (dispatch, getState) => {\n    const { rows, columns } = getState().setting;\n\n    const action = {\n      type: ActionConst.reset_data,\n      dec: '清空游戏数据',\n      rows,\n      columns\n    };\n\n    dispatch(action);\n  };\n}\n\nexport function updateData(index) {\n  return (dispatch, getState) => {\n    const { nextPlayer } = getState().status;\n\n    const action = {\n      type: ActionConst.update_data,\n      dec: '更新游戏数据',\n      index,\n      player: nextPlayer\n    };\n\n    dispatch(action);\n    dispatch(updateStatus(index));\n  };\n}\n\nexport function updateStatus(index) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const { nextPlayer } = state.status;\n    const newData = state.gameData[state.gameData.length - 1];\n    const player = {\n      [WHITE]: BLACK,\n      [BLACK]: WHITE\n    };\n\n    const winner = getWinner(newData.data, index, state);\n\n    const action = {\n      type: ActionConst.update_status,\n      dec: '更新游戏状态',\n      nowStep: newData.step,\n      nextPlayer: player[nextPlayer],\n      winner,\n      gameStatus: winner ? END : state.status.gameStatus\n    };\n\n    dispatch(action);\n  };\n}\n\nexport function updateSetting(settingData) {\n  return (dispatch, getState) => {\n    const action = {\n      type: ActionConst.update_setting,\n      dec: '更改游戏设置',\n      settingData\n    };\n\n    dispatch(action);\n    dispatch(resetStatus(END));\n  };\n}\n\nexport function resetSetting() {\n  return (dispatch, getState) => {\n    const action = {\n      type: ActionConst.reset_setting,\n      dec: '恢复游戏默认设置'\n    };\n\n    dispatch(action);\n    dispatch(resetStatus(END));\n  };\n}\n\nexport function pauseOrContinueGame(status) {\n  return {\n    type: ActionConst.change_status,\n    dec: '暂停或继续游戏',\n    gameStatus: status\n  };\n}\n\nexport function refreshHistoryData() {\n  return {\n    type: ActionConst.refresh_history,\n    dec: '刷新历史数据'\n  };\n}","export const reset_status = 'reset_status';\nexport const reset_data = 'reset_data';\n\nexport const update_data = 'update_data';\nexport const update_status = 'update_status';\n\nexport const update_setting = 'update_setting';\nexport const reset_setting = 'reset_setting';\nexport const change_status = 'change_status';\nexport const refresh_history = 'refresh_history';\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { START } from '../../constant/game';\nimport { updateData } from '../../actions/gameActions';\n\nclass Box extends Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = {\n      black: '#000',\n      white: '#fff'\n    };\n  }\n\n  render() {\n    const { size, value } = this.props;\n    const styles = {\n      width: size - 2, height: size - 2,\n      backgroundColor: value ? this.colors[value] : 'transparent'\n    };\n\n    return (\n      <div\n        className=\"box\"\n        style={{ width: size, height: size }}>\n        <span\n          className=\"player\"\n          style={styles}\n          onClick={this.handlePlay.bind(this)}></span>\n      </div>\n    );\n  }\n\n  handlePlay() {\n    // 不能重复落子在同一个位置\n    if (this.props.value || this.props.gameStatus !== START) {\n      return;\n    }\n\n    this.props.dispatch(updateData(this.props.index));\n  }\n}\n\nBox.defaultProps = {\n  value: null,\n  index: 0\n};\n\nconst mapStateToProps = state => {\n  const { size } = state.setting;\n  const { gameStatus } = state.status;\n\n  return {\n    size,\n    gameStatus\n  };\n};\n\nexport default connect(mapStateToProps)(Box);\n","import React, { Component } from 'react';\n\nimport ReduxBox from './Box';\n\nexport default class RowBox extends Component {\n  render() {\n    return (\n      <div className=\"rowBox\">\n        {\n          this.props.data.map((value, index) => {\n            return (\n              <ReduxBox\n                key={index}\n                index={this.props.startIndex + index}\n                value={value} />\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n\nRowBox.defaultProps = {\n  data: [],\n  startIndex: 0\n};","import React, { Component } from 'react';\n\nimport RowBox from './RowBox';\n\nexport default class WrapBox extends Component {\n  render() {\n    return (\n      <div className=\"wrapBox\">\n        {\n          this.renderRowBox()\n        }\n      </div>\n    );\n  }\n\n  renderRowBox() {\n    const [columns, rows] = this.props.box;\n    const data = this.props.data;\n    let arr = [];\n\n    for (let i = 0; i < rows; i++) {\n      const elem = (\n        <RowBox\n          key={i}\n          startIndex={i * columns}\n          data={data.slice(i * columns, i * columns + columns)} />\n      );\n\n      arr.push(elem);\n    }\n\n    return arr;\n  }\n}\n\nWrapBox.defaultProps = {\n  box: [0, 0],\n  data: []\n};","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './styles.scss';\n\nimport TableBox from './TableBox';\nimport WrapBox from './WrapBox';\n\nclass Game extends Component {\n  render() {\n    return (\n      <div className=\"checkerboard\">\n        <TableBox\n          box={this.props.box}\n          size={this.props.size} />\n        <WrapBox\n          box={this.props.box}\n          data={this.props.lastRecord.data} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { size, rows, columns } = state.setting;\n  const { nowStep } = state.status;\n  return {\n    size,\n    box: [columns, rows],\n    lastRecord: state.gameData[nowStep]\n  };\n};\n\nexport default connect(mapStateToProps)(Game);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'antd';\nimport './styles.scss';\n\nimport { START, PAUSE, END } from '../../constant/game';\nimport { resetStatus, pauseOrContinueGame } from '../../actions/gameActions';\n\nclass StartGame extends Component {\n  render() {\n    return (\n      <div className=\"startGame\">\n        {\n          this.props.gameStatus === END && (\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              onClick={this.handleStart.bind(this)}>开始游戏</Button>\n          )\n        }\n\n        {\n          this.props.gameStatus === START && (\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              onClick={this.handlePause.bind(this, PAUSE)}>暂停</Button>\n          )\n        }\n        {\n          this.props.gameStatus === PAUSE && (\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              onClick={this.handlePause.bind(this, START)}>继续</Button>\n          )\n        }\n\n        {\n          this.props.gameStatus === START && (\n            <Button\n              danger\n              size=\"large\"\n              onClick={this.handleStart.bind(this)}>重新开始</Button>\n          )\n        }\n\n        {\n          this.props.gameStatus !== END && (\n            <Button\n              danger\n              size=\"large\"\n              onClick={this.handlePause.bind(this, END)}>结束游戏</Button>\n          )\n        }\n      </div>\n    );\n  }\n\n  handleStart() {\n    this.props.dispatch(resetStatus(START));\n  }\n\n  handlePause(status) {\n    this.props.dispatch(pauseOrContinueGame(status));\n  }\n}\n\nconst mapStateToProps = state => {\n  const { gameStatus } = state.status;\n\n  return {\n    gameStatus\n  };\n};\n\nexport default connect(mapStateToProps)(StartGame);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './styles.scss';\n\nclass GameInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.status = {\n      start: '进行中',\n      pause: '暂停中',\n      end: '结束'\n    };\n\n    this.player = {\n      black: '黑棋',\n      white: '白棋'\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"GameInfo\">\n        <div>\n          <div className=\"infoItem\">游戏状态: {this.status[this.props.gameStatus]}</div>\n          <div className=\"infoItem\">游戏总步数: {this.props.nowStep}</div>\n          <div className=\"infoItem\">下一步选手: {this.player[this.props.nextPlayer]}</div>\n        </div>\n        <div>\n          {\n            this.props.winner && (\n              <div className=\"winner\">{this.player[this.props.winner]}胜</div>\n            )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { gameStatus, nowStep, nextPlayer, winner } = state.status;\n  return {\n    gameStatus,\n    nowStep,\n    nextPlayer,\n    winner\n  };\n};\n\nexport default connect(mapStateToProps)(GameInfo);","import React, { Component } from 'react';\nimport './styles.scss';\nimport { connect } from 'react-redux';\nimport { Descriptions, Input, Select, Button, Modal } from 'antd';\n\nimport { END, WHITE, BLACK } from '../../constant/game';\nimport { updateSetting, resetSetting } from '../../actions/gameActions';\n\nclass GameSetting extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      rows: '',\n      columns: '',\n      size: '',\n      first: '',\n      winPremise: '',\n      propsData: {}\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (state.propsData !== props) {\n      return {\n        ...props,\n        propsData: props\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <div className=\"gameSetting\">\n        <div className=\"title\">游戏设置</div>\n        <Descriptions\n          title=\"棋盘设置\"\n          layout=\"vertical\"\n          column={1}>\n          <Descriptions.Item label=\"行数\">\n            <Input\n              value={this.state.rows}\n              onChange={this.handleInput.bind(this, 'rows')} />\n          </Descriptions.Item>\n          <Descriptions.Item label=\"列数\">\n            <Input\n              value={this.state.columns}\n              onChange={this.handleInput.bind(this, 'columns')} />\n          </Descriptions.Item>\n          <Descriptions.Item label=\"棋子尺寸\">\n            <Input\n              value={this.state.size}\n              onChange={this.handleInput.bind(this, 'size')} />\n          </Descriptions.Item>\n        </Descriptions>\n        <Descriptions\n          title=\"其它设置\"\n          layout=\"vertical\"\n          column={1}>\n          <Descriptions.Item label=\"先手\">\n            <Select\n              value={this.state.first}\n              onChange={this.handleSelect.bind(this)}>\n              <Select.Option value={WHITE}>白棋</Select.Option>\n              <Select.Option value={BLACK}>黑棋</Select.Option>\n            </Select>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"连续几子胜\">\n            <Input\n              value={this.state.winPremise}\n              onChange={this.handleInput.bind(this, 'winPremise')} />\n          </Descriptions.Item>\n        </Descriptions>\n        <div>\n          <Button\n            type=\"primary\"\n            onClick={this.handleOk.bind(this)}>确定更改</Button>\n        </div>\n        <div style={{ paddingTop: 20 }}>\n          <Button onClick={this.handleReset.bind(this)}>恢复默认设置</Button>\n        </div>\n      </div>\n    );\n  }\n\n  handleInput(type, e) {\n    let reg = /^([1-9]\\d*)?$/;\n    let value = e.target.value;\n\n    if (reg.test(value)) {\n      this.setState({\n        [type]: value\n      });\n    }\n  }\n\n  handleSelect(value) {\n    this.setState({\n      first: value\n    });\n  }\n\n  handleOk() {\n    if (this.props.gameStatus !== END) {\n      this.showInfo();\n      return;\n    }\n\n    let settingData = {\n      rows: parseInt(this.state.rows, 10),\n      columns: parseInt(this.state.columns, 10),\n      size: parseInt(this.state.size, 10),\n      defaultPlayer: this.state.first,\n      continuousStep: parseInt(this.state.winPremise, 10)\n    };\n\n    this.props.dispatch(updateSetting(settingData));\n  }\n\n  handleReset() {\n    if (this.props.gameStatus !== END) {\n      this.showInfo();\n      return;\n    }\n\n    this.props.dispatch(resetSetting());\n  }\n\n  showInfo() {\n    Modal.info({ title: '请先结束当前游戏', okText: '好的' });\n  }\n}\n\nconst mapStateToProps = state => {\n  const { rows, columns, size, defaultPlayer, continuousStep } = state.setting;\n  const { gameStatus } = state.status;\n\n  return {\n    rows,\n    columns,\n    size,\n    first: defaultPlayer,\n    winPremise: continuousStep,\n    gameStatus\n  };\n};\n\nexport default connect(mapStateToProps)(GameSetting);","import React, { Component } from 'react';\nimport './styles.scss';\nimport { connect } from 'react-redux';\nimport { Timeline } from 'antd';\n\nimport { WHITE, BLACK } from '../../constant/game';\n\nclass HistoryData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.player = {\n      [WHITE]: '白棋',\n      [BLACK]: '黑棋'\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"historyData\">\n        <div className=\"title\">历史数据</div>\n        <Timeline>\n          {\n            this.props.historyData.reverse().map((item, index) => {\n              const winner = item.state.status.winner;\n\n              return (\n                <Timeline.Item key={index}>\n                  <div>开始：{item.startTime}</div>\n                  <div>结束：{item.endTime}</div>\n                  <div>胜方：{winner ? this.player[winner] : '棋局未下完'}</div>\n                </Timeline.Item>\n              );\n            })\n          }\n        </Timeline>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    historyData: state.historyData\n  };\n};\n\nexport default connect(mapStateToProps)(HistoryData);","import React, { Component } from 'react';\nimport './styles.scss';\nimport 'antd/dist/antd.css';\n\nimport ReduxGame from '../game/Game';\nimport ReduxStartGame from '../startGame/StartGame';\nimport ReduxGameInfo from '../gameInfo/GameInfo';\nimport ReduxGameSetting from '../gameSetting/GameSetting';\nimport ReduxHistoryData from '../historyData/HistoryData';\n\nexport default class Frame extends Component {\n  render() {\n    return (\n      <div className=\"frame\">\n        <div className=\"left\">\n          <ReduxHistoryData />\n        </div>\n        <div className=\"center\">\n          <div className=\"centerTop\">\n            <ReduxGameInfo />\n          </div>\n          <div className=\"gameWrap\">\n            <ReduxGame />\n          </div>\n          <div className=\"centerBottom\">\n            <ReduxStartGame />\n          </div>\n        </div>\n        <div className=\"right\">\n          <ReduxGameSetting />\n        </div>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * @desc 封装了localStorage和sessionStorage的使用, 可直接保存, 获取对象.\n */\nexport function setSession(name, value) {\n  if (typeof sessionStorage === 'object') {\n    var data = value;\n    if (typeof value !== 'string') {\n      if (data === undefined) {\n        data = null;\n      } else {\n        data = JSON.stringify(data);\n      }\n    }\n    sessionStorage.setItem(name, data);\n  }\n}\n\nexport function getSession(name) {\n  if (typeof sessionStorage === 'object') {\n    var data = sessionStorage.getItem(name);\n    try {\n      return JSON.parse(data);\n    } catch (e) {\n      return data;\n    }\n  }\n  return null;\n}\n\nexport function setLocal(name, value) {\n  if (typeof localStorage === 'object') {\n    var data = value;\n    if (typeof value !== 'string') {\n      if (data === undefined) {\n        data = null;\n      } else {\n        data = JSON.stringify(data);\n      }\n    }\n    localStorage.setItem(name, data);\n  }\n}\n\nexport function getLocal(name) {\n  if (typeof localStorage === 'object') {\n    var data = localStorage.getItem(name);\n    try {\n      return JSON.parse(data);\n    } catch (e) {\n      return data;\n    }\n  }\n  return null;\n}\n\nexport function remove(name) {\n  if (typeof sessionStorage === 'object') {\n    if (sessionStorage.getItem(name)) {\n      sessionStorage.removeItem(name);\n    }\n  }\n  if (typeof localStorage === 'object') {\n    if (localStorage.getItem(name)) {\n      localStorage.removeItem(name);\n    }\n  }\n}\n\nexport function clear() {\n  if (typeof sessionStorage === 'object') {\n    sessionStorage.clear();\n  }\n  if (typeof localStorage === 'object') {\n    localStorage.clear();\n  }\n}","import moment from 'moment';\nimport { message } from 'antd';\n\nimport { reset_status, update_status, change_status } from '../constant/actionType';\nimport { START, END, HISTORY_KEY } from '../constant/game';\nimport { setLocal, getLocal } from '../utils/storage';\nimport { refreshHistoryData } from '../actions/gameActions';\n\nlet startTime = '';\nlet endTime = '';\n\n// 缓存游戏数据中间件\nexport default function cacheData(store) {\n  return next => action => {\n    if (action.type === reset_status && action.gameStatus === START) {\n      startTime = moment().format('YYYY-MM-DD HH:mm:ss');\n    }\n\n    next(action);\n\n    const bool = (action.type === update_status) || (action.type === change_status);\n    if (bool && action.gameStatus === END) {\n      endTime = moment().format('YYYY-MM-DD HH:mm:ss');\n    }\n\n    if (startTime && endTime) {\n      const state = store.getState();\n\n      if (state.gameData.length > 1) {\n        let historyData = getLocal(HISTORY_KEY) || [];\n        let obj = {\n          state,\n          startTime,\n          endTime\n        };\n\n        delete obj.state.historyData;\n\n        startTime = '';\n        endTime = '';\n\n        try {\n          setLocal(HISTORY_KEY, [...historyData, obj]);\n        } catch (e) {\n          message.error('缓存历史数据出错');\n        }\n\n        store.dispatch(refreshHistoryData());\n      }\n    }\n  };\n}","import * as ActionConst from '../constant/actionType';\nimport * as GameConst from '../constant/game';\n\nconst initState = {\n  nextPlayer: GameConst.DEFAULT_SETTING.defaultPlayer,\n  gameStatus: GameConst.END, //start、pause、end\n  winner: '',\n  nowStep: 0\n};\n\nexport default function status(state = initState, action) {\n  switch (action.type) {\n    case ActionConst.reset_status:\n      return {\n        ...state,\n        nextPlayer: action.nextPlayer,\n        gameStatus: action.gameStatus,\n        winner: '',\n        nowStep: 0\n      };\n    case ActionConst.update_status:\n      return {\n        ...state,\n        nextPlayer: action.nextPlayer,\n        gameStatus: action.gameStatus,\n        winner: action.winner,\n        nowStep: action.nowStep\n      };\n    case ActionConst.change_status:\n      return {\n        ...state,\n        gameStatus: action.gameStatus\n      };\n    default:\n      return state;\n  }\n}","import { DEFAULT_SETTING } from '../constant/game';\nimport * as ActionConst from '../constant/actionType';\n\nconst initState = [\n  {\n    data: new Array(DEFAULT_SETTING.rows * DEFAULT_SETTING.columns).fill(null),\n    step: 0\n  }\n];\n\nexport default function gameData(state = initState, action) {\n  switch (action.type) {\n    case ActionConst.reset_data:\n      return [\n        {\n          data: new Array(action.rows * action.columns).fill(null),\n          step: 0\n        }\n      ];\n    case ActionConst.update_data:\n      return updateData(state, action);\n    default:\n      return state;\n  }\n}\n\nfunction updateData(state, action) {\n  let prevData = state[state.length - 1];\n  let newData = [...prevData.data];\n  let nextStep = prevData.step + 1;\n\n  newData[action.index] = action.player;\n\n  return [\n    ...state,\n    {\n      data: newData,\n      step: nextStep\n    }\n  ];\n}","import { getLocal } from '../utils/storage';\nimport { HISTORY_KEY } from '../constant/game';\nimport { refresh_history } from '../constant/actionType';\n\nconst data = getHistoryData();\n\nexport default function historyData(state = data, action) {\n  switch (action.type) {\n    case refresh_history:\n      return getHistoryData();\n    default:\n      return state;\n  }\n}\n\nfunction getHistoryData() {\n  return getLocal(HISTORY_KEY) || [];\n}","import { combineReducers } from 'redux';\n\nimport setting from './setting';\nimport status from './status';\nimport gameData from './gameData';\nimport historyData from './historyData';\n\n// export default function games(state = {}, action) {\n//   return {\n//     setting: setting(state.setting, action),\n//     status: status(state.status, action),\n//     gameData: gameData(state.gameData, action)\n//   };\n// }\n\nconst games = combineReducers({\n  setting,\n  status,\n  gameData,\n  historyData\n});\n\nexport default games;","import { DEFAULT_SETTING } from '../constant/game';\nimport * as ActionConst from '../constant/actionType';\n\nexport default function setting(state = DEFAULT_SETTING, action) {\n  switch (action.type) {\n    case ActionConst.update_setting:\n      return {\n        ...state,\n        ...action.settingData\n      };\n    case ActionConst.reset_setting:\n      return {\n        ...state,\n        ...DEFAULT_SETTING\n      };\n    default:\n      return state;\n  }\n}","\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nimport cacheData from '../middleware/cacheData';\nimport games from '../reducers';\n\nconst loggerMiddleware = createLogger();\n\nexport default function configStore(initState) {\n  const middleware = [thunkMiddleware, cacheData];\n\n  if (process.env.NODE_ENV === 'development') {\n    middleware.push(loggerMiddleware);\n  }\n\n  const store = createStore(games, initState, applyMiddleware(...middleware));\n\n  return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Frame from './view/frame/Frame';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport configStore from './store';\n\nconst store = configStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <Frame />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}